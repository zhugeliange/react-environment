/**
 *  Copyright (c) 2015, Facebook, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the license found in the
 *  LICENSE-examples file in the root directory of this source tree.
 */

'use strict';

exports.__esModule = true;

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

/**
 * ToolbarButton
 *
 * A button to use within the Toolbar.
 */

var ToolbarButton = (function (_React$Component) {
  _inherits(ToolbarButton, _React$Component);

  _createClass(ToolbarButton, null, [{
    key: 'propTypes',
    value: {
      onClick: _react.PropTypes.func,
      title: _react.PropTypes.string,
      label: _react.PropTypes.string
    },
    enumerable: true
  }]);

  function ToolbarButton(props) {
    var _this = this;

    _classCallCheck(this, ToolbarButton);

    _React$Component.call(this, props);

    this.onClick = function (e) {
      e.preventDefault();
      try {
        _this.props.onClick();
        _this.setState({ error: null });
      } catch (error) {
        _this.setState({ error: error });
      }
    };

    this.state = { error: null };
  }

  ToolbarButton.prototype.render = function render() {
    var error = this.state.error;

    return _react2['default'].createElement(
      'a',
      {
        className: 'toolbar-button' + (error ? ' error' : ''),
        onClick: this.onClick,
        title: error ? error.message : this.props.title },
      this.props.label
    );
  };

  return ToolbarButton;
})(_react2['default'].Component);

exports.ToolbarButton = ToolbarButton;